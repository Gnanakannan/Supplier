angular.module("akoenig.deckgrid",[]);angular.module("akoenig.deckgrid").directive("deckgrid",["DeckgridDescriptor",function initialize(DeckgridDescriptor){"use strict";return DeckgridDescriptor.create()}]);angular.module("akoenig.deckgrid").factory("DeckgridDescriptor",["Deckgrid","$templateCache",function initialize(Deckgrid,$templateCache){"use strict";function Descriptor(){this.restrict="AE";this.template='<div data-ng-repeat="column in columns" class="{{layout.classList}}">'+'<div data-ng-repeat="card in column" data-ng-include="cardTemplate"></div>'+"</div>";this.scope={model:"=source"};this.$$deckgrid=null;this.transclude=true;this.link=this.$$link.bind(this);this.$$templateKeyIndex=0}Descriptor.prototype.$$destroy=function $$destroy(){this.$$deckgrid.destroy()};Descriptor.prototype.$$link=function $$link(scope,elem,attrs,nullController,transclude){var templateKey="deckgrid/innerHtmlTemplate"+ ++this.$$templateKeyIndex+".html";scope.$on("$destroy",this.$$destroy.bind(this));if(angular.isUndefined(attrs.cardtemplate)){if(angular.isUndefined(attrs.cardtemplatestring)){transclude(scope,function onTransclude(innerHTML){var extractedInnerHTML=[],i=0,len=innerHTML.length,outerHTML;for(i;i<len;i=i+1){outerHTML=innerHTML[i].outerHTML;if(angular.isDefined(outerHTML)){extractedInnerHTML.push(outerHTML)}}$templateCache.put(templateKey,extractedInnerHTML.join())})}else{$templateCache.put(templateKey,elem.attr("cardtemplatestring"))}scope.cardTemplate=templateKey}else{scope.cardTemplate=attrs.cardtemplate}scope.mother=scope.$parent;this.$$deckgrid=Deckgrid.create(scope,elem[0])};return{create:function create(){return new Descriptor}}}]);angular.module("akoenig.deckgrid").factory("Deckgrid",["$window","$log",function initialize($window,$log){"use strict";function Deckgrid(scope,element){var self=this,watcher,mql;this.$$elem=element;this.$$watchers=[];this.$$scope=scope;this.$$scope.columns=[];this.$$scope.layout=this.$$getLayout();this.$$createColumns();watcher=this.$$scope.$watchCollection("model",this.$$onModelChange.bind(this));this.$$watchers.push(watcher);angular.forEach(self.$$getMediaQueries(),function onIteration(rule){var handler=self.$$onMediaQueryChange.bind(self);function onDestroy(){rule.removeListener(handler)}rule.addListener(handler);self.$$watchers.push(onDestroy)});mql=$window.matchMedia("(orientation: portrait)");mql.addListener(self.$$onMediaQueryChange.bind(self))}Deckgrid.prototype.$$getMediaQueries=function $$getMediaQueries(){var stylesheets=[],mediaQueries=[];stylesheets=Array.prototype.concat.call(Array.prototype.slice.call(document.querySelectorAll("style[type='text/css']")),Array.prototype.slice.call(document.querySelectorAll("link[rel='stylesheet']")));function extractRules(stylesheet){try{return stylesheet.sheet.cssRules||[]}catch(e){return[]}}function hasDeckgridStyles(rule){var regexe=/\[(\w*-)?deckgrid\]::?before/g,i=0,selector="";if(!rule.media||angular.isUndefined(rule.cssRules)){return false}i=rule.cssRules.length-1;for(i;i>=0;i=i-1){selector=rule.cssRules[i].selectorText;if(angular.isDefined(selector)&&selector.match(regexe)){return true}}return false}angular.forEach(stylesheets,function onIteration(stylesheet){var rules=extractRules(stylesheet);angular.forEach(rules,function inRuleIteration(rule){if(hasDeckgridStyles(rule)){mediaQueries.push($window.matchMedia(rule.media.mediaText))}})});return mediaQueries};Deckgrid.prototype.$$createColumns=function $$createColumns(){var self=this;if(!this.$$scope.layout){return $log.error("angular-deckgrid: No CSS configuration found (see "+"https://github.com/akoenig/angular-deckgrid#the-grid-configuration)")}this.$$scope.columns=[];angular.forEach(this.$$scope.model,function onIteration(card,index){var column=index%self.$$scope.layout.columns|0;if(!self.$$scope.columns[column]){self.$$scope.columns[column]=[]}card.$index=index;self.$$scope.columns[column].push(card)})};Deckgrid.prototype.$$getLayout=function $$getLayout(){var content=$window.getComputedStyle(this.$$elem,":before").content,layout;if(content){content=content.replace(/'/g,"");content=content.replace(/"/g,"");content=content.split(" ");if(2===content.length){layout={};layout.columns=content[0]|0;layout.classList=content[1].replace(/\./g," ").trim()}}return layout};Deckgrid.prototype.$$onMediaQueryChange=function $$onMediaQueryChange(){var self=this,layout=this.$$getLayout();if(layout.columns!==this.$$scope.layout.columns){self.$$scope.layout=layout;self.$$scope.$apply(function onApply(){self.$$createColumns()})}};Deckgrid.prototype.$$onModelChange=function $$onModelChange(newModel,oldModel){var self=this;newModel=newModel||[];oldModel=oldModel||[];if(!angular.equals(oldModel,newModel)){self.$$createColumns()}};Deckgrid.prototype.destroy=function destroy(){var i=this.$$watchers.length-1;for(i;i>=0;i=i-1){this.$$watchers[i]()}};return{create:function create(scope,element){return new Deckgrid(scope,element)}}}]);